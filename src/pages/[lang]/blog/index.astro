---
import { BlogPostManager } from 'src/BlogPostManager'

import PageLayout from '@layouts/PageLayout.astro'
import BlogPostPreview from '@components/BlogPostPreview.astro'
import localStrings from '@locals/strings'

import { Language, Page } from '@enums'
import  { BlogPost } from '@interfaces'

export interface Params {
  lang: Language
}
export interface Props {
  posts: BlogPost[]
}

export async function getStaticPaths(): Promise<{ params: Params; props: Props }[]> {
  const buildRoute = (lang: Language, posts: BlogPost[]) => {
    const filteredPosts = posts.filter((post) => post.lang === lang)
    return {
      params: { lang },
      props: { posts: filteredPosts },
    }
  }

  const posts = (await BlogPostManager.getInstance()).posts
  const routes = Object.values(Language).map((lang) => buildRoute(lang, posts))
  return routes
}

const { lang } = Astro.params as unknown as Params
const { posts } = Astro.props as Props
const page = Page.Blog
const strings = localStrings[lang].page[page]
---

<PageLayout lang={lang} page={page}>
  <h2>{strings.intro_title}</h2>
  {posts.map((post) => <BlogPostPreview lang={lang} post={post} />)}
  
  {JSON.stringify(posts)}
</PageLayout>