---
import TagComponent from '../components/Tag.astro'

import  { Language, Tag } from '@enums'
import  { BlogPost } from '@interfaces'

export interface Props {
  lang: Language
  post: BlogPost
}

const { lang, post } = Astro.props as Props
---

<div class="BlogPostPreview">
  {post.frontmatter?.heroImage?.url &&
  <picture class="BlogPostPreview-media">
    <img src={post.frontmatter.heroImage.url} />
  </picture>
  }

  <h3 class="BlogPostPreview-title">{post.title}</h3>
  <p class="BlogPostPreview-content">
    {post.description}
    <a href={post.url}><i>Read More...</i></a>
  </p>

  <dl class="BlogPostPreview-footer">
    {post.readTimeResults?.minutes &&
    <div>
      <dt data-icon style="--url: url(/icons/clock-reshot-UENFYSVQ53.svg)"></dt>
      <dd>{new Intl.NumberFormat(lang, {
          style: 'unit',
          unit: 'minute',
          unitDisplay: 'long',
          maximumFractionDigits: 0
        }).format(Math.ceil(post.readTimeResults.minutes))}
      </dd>
    </div>
    }

    {post.frontmatter?.datePublished &&
    <div>
      <dt data-icon style="--url: url(/icons/calendar-reshot-RTYJNSX56M.svg)"></dt>
      <dd>{new Intl.DateTimeFormat(lang, {
        year: 'numeric',
        month: 'numeric',
        day: 'numeric'
      }).format(new Date(post.frontmatter.datePublished))}
      </dd>
    </div>
    }

    {post.frontmatter.tags?.length && post.frontmatter.tags.length > 0 &&
    <div>
      <dt data-icon style="--url: url(/icons/tag-reshot-AV8PD3NS5T.svg)"></dt>
      <dd>
        <ul>
          {post.frontmatter.tags.map((tag: Tag) =>
          <li>
            <TagComponent url={`/${lang}/blog?tag=${tag}`} lang={lang} tag={tag} />
          </li>
          )}
        </ul>
      </dd>
    </div>
    }
  </dl>
</div>

<br />
{JSON.stringify(Astro.props)}

<style lang="scss">
  .BlogPostPreview {
    position: relative;
    background: linear-gradient(rgba(0 0 0 / 0.2),
        rgba(0 0 0 / 0.6) 15%,
        rgba(0 0 0 / 0.8) 25%,
        rgba(0 0 0 / 0.8) 90%,
        rgba(0 0 0 / 0.6) 100%);
    border-radius: 10px;
    box-shadow: 1px 2px 5px 2px var(--theme-background-box-shadow);
    text-shadow: 2px 2px rgba(0 0 0 / 0.4);

    padding: 15% 1rem 1rem;
    margin: 0 auto 1.6rem;
    max-width: 70ch;

    display: block;
    text-decoration: none;
    overflow: hidden;
  }

  .BlogPostPreview>picture>img,
  .BlogPostPreview>video,
  .BlogPostPreview>img {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);

    min-width: 100%;
    max-width: 100%;
    min-height: 100%;
    z-index: -1;
  }

  .BlogPostPreview-footer {
    font-size: 0.8em;
    display: flex;
    justify-content: space-between;

    *[data-icon]::before {
      content: '';
      background-color: var(--theme-secondary);
      mask-image: var(--url);
      display: inline-block;
      vertical-align: text-top;
      height: 1.4em;
      width: 1.4em;
    }

    dd {
      vertical-align: top;
    }

    dd>ul {
      list-style: none;
      padding: 0;

      >li {
        display: inline-block;
      }
    }
  }
</style>